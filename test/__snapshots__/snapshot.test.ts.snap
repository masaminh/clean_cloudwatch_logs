// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`snapshot test 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Eval41256dc5445742738ed917bc818694e54EB1134F": {
      "DependsOn": [
        "Eval41256dc5445742738ed917bc818694e5ServiceRoleA1AB6027",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Eval41256dc5445742738ed917bc818694e5ServiceRoleA1AB6027",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "Eval41256dc5445742738ed917bc818694e5ServiceRoleA1AB6027": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Rule4C995B7F": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "StateMachine2E01A3A5",
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "StateMachineEventsRoleDBCDECD1",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "StateMachine2E01A3A5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StateMachineRoleDefaultPolicyDF1E6607",
        "StateMachineRoleB840431D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"GetLogGroups","States":{"GetLogGroups":{"Next":"ParallelLogGroups","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.time","Resource":"",
              {
                "Fn::GetAtt": [
                  "getloggroupsD7CF3457",
                  "Arn",
                ],
              },
              ""},"ParallelLogGroups":{"Type":"Parallel","End":true,"Branches":[{"StartAt":"GetLogStreamsMap","States":{"GetLogStreamsMap":{"Type":"Map","ResultPath":null,"End":true,"ItemsPath":"$.targetLogGroups","ItemSelector":{"eventTime.$":"$.eventTime","logGroupInfo.$":"$$.Map.Item.Value"},"ItemProcessor":{"ProcessorConfig":{"Mode":"INLINE"},"StartAt":"GetLogStreams","States":{"GetLogStreams":{"Next":"IsEmptyLogGroup","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "getlogstreamsD20145F9",
                  "Arn",
                ],
              },
              ""},"IsEmptyLogGroup":{"Type":"Choice","Choices":[{"Variable":"$.isEmpty","BooleanEquals":true,"Next":"NotifyMessage"}],"Default":"DeleteLogStreams"},"DeleteLogStreams":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "deletelogstreams9F60BE28",
                  "Arn",
                ],
              },
              ""},"NotifyMessage":{"Next":"NotifyEmptyLogGroup","Type":"Task","ResultPath":"$.notifyMessage","Resource":"",
              {
                "Fn::GetAtt": [
                  "Eval41256dc5445742738ed917bc818694e54EB1134F",
                  "Arn",
                ],
              },
              "","Parameters":{"expression":"\`Region: \${$.region}, Loggroup: \${$.logGroupName} is empty.\`","expressionAttributeValues":{"$.region.$":"$.region","$.logGroupName.$":"$.logGroupName"}}},"NotifyEmptyLogGroup":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::sqs:sendMessage","Parameters":{"QueueUrl":"https://sqs.ap-northeast-1.",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/123456789012/Queue","MessageBody":{"webhookname":"Develop","message.$":"$.notifyMessage"}}}}},"MaxConcurrency":1}}},{"StartAt":"SetRetentionMap","States":{"SetRetentionMap":{"Type":"Map","ResultPath":null,"End":true,"ItemsPath":"$.noRetentionLogGroups","ItemSelector":{"logGroupInfo.$":"$$.Map.Item.Value"},"ItemProcessor":{"ProcessorConfig":{"Mode":"INLINE"},"StartAt":"SetRetentionInDays","States":{"SetRetentionInDays":{"End":true,"Retry":[{"ErrorEquals":["CloudWatchLogs.CloudWatchLogsException","CloudWatchLogs.SdkClientException"],"IntervalSeconds":1,"MaxAttempts":5,"BackoffRate":2}],"Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:cloudwatchlogs:putRetentionPolicy","Parameters":{"LogGroupName.$":"$.logGroupInfo.name","RetentionInDays":30}}}},"MaxConcurrency":1}}}]}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StateMachineEventsRoleDBCDECD1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineEventsRoleDefaultPolicyFB602CA9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StateMachine2E01A3A5",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineEventsRoleDefaultPolicyFB602CA9",
        "Roles": [
          {
            "Ref": "StateMachineEventsRoleDBCDECD1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StateMachineRoleB840431D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineRoleDefaultPolicyDF1E6607": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "getloggroupsD7CF3457",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "getloggroupsD7CF3457",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "getlogstreamsD20145F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "getlogstreamsD20145F9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "deletelogstreams9F60BE28",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "deletelogstreams9F60BE28",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Eval41256dc5445742738ed917bc818694e54EB1134F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Eval41256dc5445742738ed917bc818694e54EB1134F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": "arn:aws:sqs:ap-northeast-1:123456789012:Queue",
            },
            {
              "Action": "logs:putRetentionPolicy",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineRoleDefaultPolicyDF1E6607",
        "Roles": [
          {
            "Ref": "StateMachineRoleB840431D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deletelogstreams9F60BE28": {
      "DependsOn": [
        "deletelogstreamsServiceRoleDefaultPolicy706D0026",
        "deletelogstreamsServiceRole859AA330",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "deletelogstreamsServiceRole859AA330",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "deletelogstreamsServiceRole859AA330": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "deletelogstreamsServiceRoleDefaultPolicy706D0026": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "logs:DeleteLogStream",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:log-stream:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deletelogstreamsServiceRoleDefaultPolicy706D0026",
        "Roles": [
          {
            "Ref": "deletelogstreamsServiceRole859AA330",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getloggroupsD7CF3457": {
      "DependsOn": [
        "getloggroupsServiceRoleDefaultPolicy61B31DEF",
        "getloggroupsServiceRole2F7300D4",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "getloggroupsServiceRole2F7300D4",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "getloggroupsServiceRole2F7300D4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getloggroupsServiceRoleDefaultPolicy61B31DEF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getloggroupsServiceRoleDefaultPolicy61B31DEF",
        "Roles": [
          {
            "Ref": "getloggroupsServiceRole2F7300D4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getlogstreamsD20145F9": {
      "DependsOn": [
        "getlogstreamsServiceRoleDefaultPolicy10C98299",
        "getlogstreamsServiceRoleF2C01167",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "getlogstreamsServiceRoleF2C01167",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "getlogstreamsServiceRoleDefaultPolicy10C98299": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "logs:DescribeLogStreams",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:log-stream:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getlogstreamsServiceRoleDefaultPolicy10C98299",
        "Roles": [
          {
            "Ref": "getlogstreamsServiceRoleF2C01167",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getlogstreamsServiceRoleF2C01167": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
